# 문제 실3
# 정수 X에 사용할 수 있는 연산은 다음과 같이 세 가지 이다.

# X가 3으로 나누어 떨어지면, 3으로 나눈다.
# X가 2로 나누어 떨어지면, 2로 나눈다.
# 1을 뺀다.
# 정수 N이 주어졌을 때, 위와 같은 연산 세 개를 적절히 사용해서 1을 만들려고 한다. 연산을 사용하는 횟수의 최솟값을 출력하시오.

# 입력
# 첫째 줄에 1보다 크거나 같고, 106보다 작거나 같은 정수 N이 주어진다.

# 출력
# 첫째 줄에 연산을 하는 횟수의 최솟값을 출력한다.
#input
N = int(input())

# 그 숫자가 6으로 나눠 진다면 /2 /3 -1의 dp 중 min +1
# 그 숫자가 3으로 나눠 진다면 /3 -1의 dp 중 min +1
# 그 숫자가 2으로 나눠 진다면 /2 -1의 dp 중 min +1
# else: -1의 dp +1

#   0 1 2 3 4 5 6 7 8 9 10
#   0 0 1 1 2 3 2 3 3 2  3 

#N전까지의 숫자들의 최솟값을 다 저장하자
num = list(range(N+1))
dp = [0]*(N+1)
for i in range(2,N+1):
    if(num[i]%6==0):
        dp[i] = min(dp[i//2], dp[i//3], dp[i-1]) + 1
    elif(num[i]%3==0):
        dp[i] = min(dp[i//3], dp[i-1]) + 1
    elif(num[i]%2==0):
        dp[i] = min(dp[i//2], dp[i-1]) + 1
    else:
        dp[i] = dp[i-1] + 1   

print(dp[N])